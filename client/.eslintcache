[{"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\App.js":"3","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\reducer\\reducer.js":"4","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\login.js":"5","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\companyabout\\companyabouts.js":"6","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\companyprofiles\\company.js":"7","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\jobform\\jobforms.js":"8","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\registration.js":"9","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Jobs\\job.js":"10","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Employers\\employers.js":"11","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\home\\home.js":"12","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\actionType.js":"13","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\viewjob\\viewjob.js":"14","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\footer\\footer.js":"15","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\carousel\\employersCarousel.js":"16","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\carousel\\carousel.js":"17","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\action\\action.js":"18","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientSideNavbar\\navbar.js":"19","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientLoginNav\\navbar.js":"20","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientEmployerNav\\clientEmployerNav.js":"21","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Body\\body.js":"22","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Logo\\logo.js":"23","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\utilities\\apiIntegration.js":"24","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\layouts\\Admin.js":"25","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\routes.js":"26","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Sidebar\\Sidebar.js":"27","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\Navbar.js":"28","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\FixedPlugin\\FixedPlugin.js":"29","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\layouts\\adminStyle.js":"30","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\RTLNavbarLinks.js":"31","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\AdminNavbarLinks.js":"32","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\CustomButtons\\Button.js":"33","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react.js":"34","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\buttonStyle.js":"35","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\headerLinksStyle.js":"36","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\dropdownStyle.js":"37","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\headerStyle.js":"38","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\rtlHeaderLinksStyle.js":"39","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\CustomInput\\CustomInput.js":"40","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\customInputStyle.js":"41","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\sidebarStyle.js":"42","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Dashboard\\Dashboard.js":"43","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\UserProfile\\UserProfile.js":"44","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\TableList\\TableList.js":"45","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Typography\\Typography.js":"46","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Notifications\\Notifications.js":"47","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardFooter.js":"48","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\Card.js":"49","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardHeader.js":"50","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardBody.js":"51","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Grid\\GridItem.js":"52","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Grid\\GridContainer.js":"53","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"54","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"55","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardFooterStyle.js":"56","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"57","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardIcon.js":"58","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Table\\Table.js":"59","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"60","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js":"61","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Snackbar\\Snackbar.js":"62","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Snackbar\\SnackbarContent.js":"63","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\snackbarContentStyle.js":"64","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Quote.js":"65","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Muted.js":"66","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Primary.js":"67","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Success.js":"68","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Info.js":"69","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Warning.js":"70","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Danger.js":"71","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\typographyStyle.js":"72","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\variables\\charts.js":"73","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Footer2\\Footer.js":"74","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\footerStyle.js":"75","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\reducer\\companyReducer.js":"76","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\companyLogin.js":"77","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\action\\companyAction.js":"78"},{"size":1305,"mtime":1623509031962,"results":"79","hashOfConfig":"80"},{"size":362,"mtime":1612018960104,"results":"81","hashOfConfig":"80"},{"size":1904,"mtime":1623418326333,"results":"82","hashOfConfig":"80"},{"size":802,"mtime":1612018961539,"results":"83","hashOfConfig":"80"},{"size":6185,"mtime":1623915736712,"results":"84","hashOfConfig":"80"},{"size":4756,"mtime":1615318325473,"results":"85","hashOfConfig":"80"},{"size":2590,"mtime":1615318087441,"results":"86","hashOfConfig":"80"},{"size":4087,"mtime":1615321117551,"results":"87","hashOfConfig":"80"},{"size":5632,"mtime":1623911847003,"results":"88","hashOfConfig":"80"},{"size":3249,"mtime":1615325097991,"results":"89","hashOfConfig":"80"},{"size":6740,"mtime":1623933371015,"results":"90","hashOfConfig":"80"},{"size":418,"mtime":1623911884393,"results":"91","hashOfConfig":"80"},{"size":491,"mtime":1613363881640,"results":"92","hashOfConfig":"80"},{"size":4344,"mtime":1615318986392,"results":"93","hashOfConfig":"80"},{"size":1480,"mtime":1613310044432,"results":"94","hashOfConfig":"80"},{"size":876,"mtime":1612018961045,"results":"95","hashOfConfig":"80"},{"size":1610,"mtime":1612018960986,"results":"96","hashOfConfig":"80"},{"size":3271,"mtime":1613849185903,"results":"97","hashOfConfig":"80"},{"size":1930,"mtime":1623911801513,"results":"98","hashOfConfig":"80"},{"size":378,"mtime":1612018960893,"results":"99","hashOfConfig":"80"},{"size":1261,"mtime":1613368419179,"results":"100","hashOfConfig":"80"},{"size":2708,"mtime":1612018960627,"results":"101","hashOfConfig":"80"},{"size":525,"mtime":1612018960815,"results":"102","hashOfConfig":"80"},{"size":4802,"mtime":1615322243392,"results":"103","hashOfConfig":"80"},{"size":5134,"mtime":1613857226284,"results":"104","hashOfConfig":"80"},{"size":1293,"mtime":1615321430043,"results":"105","hashOfConfig":"80"},{"size":5233,"mtime":1613315336681,"results":"106","hashOfConfig":"80"},{"size":2184,"mtime":1613315141481,"results":"107","hashOfConfig":"80"},{"size":1260,"mtime":1613314642856,"results":"108","hashOfConfig":"80"},{"size":669,"mtime":1613314831924,"results":"109","hashOfConfig":"80"},{"size":5460,"mtime":1613315220617,"results":"110","hashOfConfig":"80"},{"size":3414,"mtime":1613370137653,"results":"111","hashOfConfig":"80"},{"size":1674,"mtime":1613314947239,"results":"112","hashOfConfig":"80"},{"size":7001,"mtime":1613313492288,"results":"113","hashOfConfig":"80"},{"size":8317,"mtime":1613314861259,"results":"114","hashOfConfig":"80"},{"size":2423,"mtime":1613315099416,"results":"115","hashOfConfig":"80"},{"size":2919,"mtime":1613315076209,"results":"116","hashOfConfig":"80"},{"size":1544,"mtime":1613315168887,"results":"117","hashOfConfig":"80"},{"size":2423,"mtime":1613315254974,"results":"118","hashOfConfig":"80"},{"size":2239,"mtime":1613315272685,"results":"119","hashOfConfig":"80"},{"size":1329,"mtime":1613315295092,"results":"120","hashOfConfig":"80"},{"size":6720,"mtime":1613315359611,"results":"121","hashOfConfig":"80"},{"size":3433,"mtime":1615321464379,"results":"122","hashOfConfig":"80"},{"size":7733,"mtime":1613371045149,"results":"123","hashOfConfig":"80"},{"size":4464,"mtime":1615326663667,"results":"124","hashOfConfig":"80"},{"size":8959,"mtime":1615312247870,"results":"125","hashOfConfig":"80"},{"size":10744,"mtime":1613316553539,"results":"126","hashOfConfig":"80"},{"size":1174,"mtime":1613316239057,"results":"127","hashOfConfig":"80"},{"size":1050,"mtime":1613316071016,"results":"128","hashOfConfig":"80"},{"size":1258,"mtime":1613316295523,"results":"129","hashOfConfig":"80"},{"size":1018,"mtime":1613316225091,"results":"130","hashOfConfig":"80"},{"size":616,"mtime":1613313493378,"results":"131","hashOfConfig":"80"},{"size":651,"mtime":1613313493358,"results":"132","hashOfConfig":"80"},{"size":797,"mtime":1613316154025,"results":"133","hashOfConfig":"80"},{"size":298,"mtime":1613313492503,"results":"134","hashOfConfig":"80"},{"size":1041,"mtime":1613316270773,"results":"135","hashOfConfig":"80"},{"size":2958,"mtime":1613316313258,"results":"136","hashOfConfig":"80"},{"size":1034,"mtime":1613313493058,"results":"137","hashOfConfig":"138"},{"size":2196,"mtime":1613316421306,"results":"139","hashOfConfig":"80"},{"size":1423,"mtime":1613316443200,"results":"140","hashOfConfig":"80"},{"size":1709,"mtime":1613316491953,"results":"141","hashOfConfig":"80"},{"size":2164,"mtime":1613316572495,"results":"142","hashOfConfig":"80"},{"size":1682,"mtime":1613316582564,"results":"143","hashOfConfig":"80"},{"size":2383,"mtime":1613316604236,"results":"144","hashOfConfig":"80"},{"size":704,"mtime":1613316706747,"results":"145","hashOfConfig":"138"},{"size":573,"mtime":1613316761381,"results":"146","hashOfConfig":"138"},{"size":579,"mtime":1613316767715,"results":"147","hashOfConfig":"138"},{"size":579,"mtime":1613316777264,"results":"148","hashOfConfig":"138"},{"size":570,"mtime":1613316754441,"results":"149","hashOfConfig":"138"},{"size":579,"mtime":1613316947915,"results":"150","hashOfConfig":"138"},{"size":576,"mtime":1613316748376,"results":"151","hashOfConfig":"138"},{"size":968,"mtime":1613316732036,"results":"152","hashOfConfig":"138"},{"size":4299,"mtime":1613313493848,"results":"153","hashOfConfig":"80"},{"size":1741,"mtime":1613317154836,"results":"154","hashOfConfig":"80"},{"size":988,"mtime":1613317090304,"results":"155","hashOfConfig":"80"},{"size":867,"mtime":1613363830475,"results":"156","hashOfConfig":"80"},{"size":6032,"mtime":1623911936437,"results":"157","hashOfConfig":"80"},{"size":3284,"mtime":1613857390671,"results":"158","hashOfConfig":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"1b5tzfg",{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"161"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"161"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"161"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"161"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"161"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"161"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"161"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"161"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"161"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"161"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"161"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"161"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"161"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gsiucd",{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"161"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"161"},"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\index.js",[],["334","335"],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\App.js",["336","337"],"import React, { useEffect } from 'react';\nimport {Switch,Route,withRouter} from 'react-router-dom';\nimport Home from './components/home/home';\nimport ClientLogin from './components/clientAccount/login';\nimport Employers from './components/Employers/employers';\nimport ClientRegistration from './components/clientAccount/registration';\nimport job from './components/Jobs/job';\nimport company from './components/companyprofiles/company';\nimport companyabouts from './components/companyabout/companyabouts';\nimport viewjob from './components/viewjob/viewjob';\nimport { useDispatch } from 'react-redux';\nimport { checkAuthState } from './entities/action/action';\nimport {checkCompanyAuthState} from './entities/action/companyAction';\nimport Admin from \"./layouts/Admin.js\";\nimport CompanyLogin from './components/clientAccount/companyLogin';\nimport { useMatomo } from '@datapunt/matomo-tracker-react'\n\nconst App = ()=>{\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    dispatch(checkAuthState());\n    dispatch(checkCompanyAuthState());\n  },[])\n  const { trackPageView } = useMatomo()\n  React.useEffect(() => {\n    trackPageView(trackPageView({\n        href: window.location.pathname+window.location.search, // optional\n      }))\n  }, [])\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/login\" component={ClientLogin}/>\n      <Route exact path=\"/companyLogin\" component={CompanyLogin}/>\n      <Route exact path=\"/registration\" component={ClientRegistration}/>\n      <Route exact path=\"/employers\" component={Employers}/>\n      <Route exact path=\"/job\" component={job}/>\n      <Route exact path=\"/company\" component={company}/>\n      <Route exact path=\"/company/:id\" component={companyabouts}/>\n      <Route exact path=\"/job/:id\" component={viewjob}/>\n      <Route path=\"/admin\" component={Admin} />\n    </Switch>\n  );\n}\n\nexport default withRouter(App);\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\reducer\\reducer.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\login.js",["338","339"],"import React,{useEffect}  from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form,Button,Row,Col,Spinner } from 'react-bootstrap';\nimport classes from './login.module.css';\nimport Olx from '../../assets/robot.png'; \nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { Login } from '../../entities/action/action';\nimport ClientLoginNav from '../Navbars/clientLoginNav/navbar';\nimport { Link } from 'react-router-dom';\nimport { useMatomo } from '@datapunt/matomo-tracker-react'\n\n\nconst validationSchema=Yup.object().shape({\n    email:Yup.string()\n    .required(\"Must Be A User ID\"),\n    password:Yup.string()\n   \n    .required(\"Must Be a Password\")\n})\n\nconst ClientLogin = (props)=> { \n\n    const dispatch = useDispatch();\n    const { trackPageView, trackEvent } = useMatomo()\n    React.useEffect(() => {\n        trackPageView({\n            documentTitle: 'Login Page', // optional\n            href: window.location.pathname+window.location.search, // optional\n          })\n    }, [])\n    const isLoggedIn = useSelector(state=>state.account.isLoggedIn);\n    const isLoading = useSelector(state=>state.account.isLoading);\n    const handleOnClick = () => {\n        // Track click on button\n        trackEvent({ category: 'Login Page', action: 'Login Button Clicked' })\n    }\n\n    useEffect(()=>{\n        if(isLoggedIn){\n            props.history.push('/');\n        }\n        \n    },[isLoggedIn])\n  return (\n    <>\n    <div style={{backgroundColor: 'rgb(0, 19, 38)',minHeight:'100vh'}}>\n        <ClientLoginNav/>\n        {\n            !isLoading?\n            <div className={classes.Box}>\n            <Row>\n                <Col xl={6} md={12}>\n                    <img src={Olx} alt=\"LoginPage\" style={{margin:'auto'}} className={classes.Img}></img>\n                </Col>\n                <Col xl={6} md={12} style={{display:'flex',flexDirection:'column',alignSelf:'center'}}>\n                    <div style={{marginBottom:'5%'}} className={classes.ReduceSize}>\n                        <center>\n                            <h2 style={{color:\"white\"}} >Login to your EasyApply Account</h2>  \n                        </center>  \n                    </div>\n                    <Formik \n                    initialValues={{ email: '', password: '' }} \n                    validationSchema={validationSchema}\n                    onSubmit={\n                        (values,{setSubmitting,resetForm})=>{\n                            handleOnClick();\n                            setSubmitting(true);\n                            console.log(values)\n                            dispatch(Login(values,\"1\"))\n                            resetForm();\n                            setSubmitting(false);\n                        }\n                    }>\n                        {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting})=>(\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Email ID</Form.Label>\n                                    <Form.Control\n                                    name=\"email\"\n                                    type=\"email\" \n                                    placeholder=\"Enter Email ID\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    className={touched.email ? \"has-error\":null}/> \n                                    <Form.Text className=\"text-muted\">\n                                    {errors.email && touched.email && errors.email}\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control \n                                    name=\"password\"\n                                    type=\"password\" \n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    className={touched.email && errors.name ? \"has-error\":null} />\n                                    <Form.Text className=\"text-muted\">\n                                    {errors.password && touched.password && errors.password}\n                                    </Form.Text>\n                                </Form.Group>\n                                <center>\n                                <Button \n                                size=\"lg\" \n                                variant=\"primary\" \n                                type=\"submit\" \n                                style={{margin:'3% 0'}}\n                                disabled={isSubmitting}\n                                id=\"matomoLoginClick\"\n                                >\n                                Login\n                                </Button>\n                                <Button \n                                size=\"lg\" \n                                variant=\"danger\"  \n                                style={{margin:'3% 2%'}}\n                                // onClick={()=>props.history.push('/')}\n                                id=\"matomoLoginCancel\"\n                                >\n                                Cancel\n                                </Button>\n                                </center>\n                                <center>\n                                    <Link to=\"/registration\">Not Yet Registered? Register here!!</Link>\n                                </center>\n                            </Form>\n                        )}\n                    </Formik>       \n                </Col>\n            </Row>\n        </div>:\n        <center> \n            <Spinner animation=\"border\" variant=\"light\" />\n        </center>\n        }\n    </div>  \n    </> \n      \n  );\n}\n\nexport default ClientLogin;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\companyabout\\companyabouts.js",["340"],"import React,{useState,useEffect} from 'react';\r\nimport classes from './companyabouts.module.css';\r\nimport ClientNav from '../Navbars/clientSideNavbar/navbar';\r\nimport {Container,Row,Col,Button,Card} from 'react-bootstrap';\r\nimport Footer from '../footer/footer';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetCompaniesById, GetLatestJobs } from '../../utilities/apiIntegration';\r\nimport { Fragment } from 'react';\r\n\r\nconst Companyabouts = (props)=>{\r\n    const [jobs,updateJobs] = useState([]);\r\n    const [data,updateData] = useState({});\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const res = await GetCompaniesById(props.match.params.id);\r\n            if(res.message===\"success\"&&res.companies!==undefined&&Object.keys(res.companies).length>0){\r\n                updateData(res.companies);\r\n            }\r\n            const response = await GetLatestJobs();\r\n            if(response.message===\"success\"){\r\n                updateJobs(response.user);\r\n            }\r\n        })()\r\n    },[])\r\n    return(\r\n        <>\r\n        <ClientNav />\r\n        <Container>\r\n        {\r\n            Object.keys(data).length>0?\r\n            <Fragment> \r\n            <Row className={classes.Background}>\r\n                <Col>\r\n                    <img src={data.images[0]} alt=\"Office\" className={classes.Img}/>\r\n                </Col>\r\n                <Col>\r\n                    <div className={classes.Centered}>\r\n                        <h5 className={classes.P}>{data.companyName}</h5>\r\n                        <p>\r\n                            {data.description}\r\n                        </p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row className={classes.Background}>\r\n                <Col md={8} xs={12}>\r\n                    <div className={classes.Centered}>\r\n                        <h5 className={classes.P}>Multiple Locations</h5>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                {\r\n                                    data.locations&&data.locations.split(',').map((d,i)=>\r\n                                        <Col xs={6} key={i}>{d}</Col>\r\n                                    )\r\n                                }\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </Col>\r\n                <Col md={4} xs={12}>\r\n                    <img src={data.images[1]} alt=\"Office\" className={classes.Img}/>\r\n                </Col>\r\n            </Row>\r\n            <hr/>\r\n            <center>\r\n                <h3>Working At company</h3>\r\n                <h4 style={{color: 'rgb(75, 75, 75)',padding: '30px'}}>\"{data.companyQuotes}\"</h4>\r\n                <video style={{width:'100%'}} controls>\r\n                    <source src={data.videos} type=\"video/mp4\"/>\r\n                    Your browser does not support the video tag.\r\n                </video>\r\n            </center>\r\n            </Fragment>:<div style={{minHeight:'75vh'}}></div>\r\n            }\r\n            <hr/>\r\n            <div className=\"my-5\">\r\n                <h2 className=\"text-center font-weight-lighter\">Similar Jobs</h2>\r\n            </div>\r\n            <Container>\r\n            <Row>\r\n                {\r\n                    jobs.length>0?jobs.map((job,key)=>\r\n                    <Col lg={4} sm={6} xs={12} key={key}>\r\n                        <Card\r\n                            text=\"dark\"\r\n                        >\r\n                            <Card.Header>Company: {job.companyName}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>{job.jobPosition}</Card.Title>\r\n                                <Card.Text>Locations: {job.location}</Card.Text>\r\n                                <div style={{display:'flex',justifyContent:'center'}}>\r\n                                    <Link to={`job/${job._id}`}>\r\n                                        <Button variant=\"secondary\" style={{marginRight:'5px'}}>Info</Button>\r\n                                    </Link>\r\n                                    <Link to={`job/${job._id}`}>\r\n                                        <Button variant=\"success\">Apply</Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Card.Text>Posted On: {job.jobDate}</Card.Text>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                    ):null\r\n                }\r\n            </Row>\r\n        </Container>\r\n        </Container> \r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default Companyabouts;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\companyprofiles\\company.js",["341"],"import React, { useEffect, useState } from 'react';\r\nimport ClientNav from '../Navbars/clientSideNavbar/navbar';\r\nimport classes from './company.module.css';\r\nimport Footer from '../footer/footer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {GetCompanies} from '../../utilities/apiIntegration';\r\n\r\nconst Company = () => {\r\n    const [data,updateData] = useState([]);\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const res = await GetCompanies();\r\n            if(res.message===\"success\"&&res.companies!==undefined&&res.companies.length>0){\r\n                updateData(res.companies);\r\n            }\r\n        })()\r\n    },[])\r\n    return (\r\n        <>\r\n            <ClientNav />\r\n            <center>\r\n                <h3 className={classes.H3}>\r\n                    EXPLORE COMPANIES\r\n                </h3>\r\n                <h3 className={classes.p3}>\r\n                    Browse Offices Before You Apply\r\n                </h3>\r\n            </center>\r\n            <div className={classes.Form}>\r\n               \r\n                <div className=\"my-5\">\r\n                <h4 className={classes.H4}>THE EASSYAPPLY TEAM PICKS</h4>\r\n                </div>\r\n                <div className=\"container-fluid mb-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    data.length>0?data.map((d,key)=>\r\n                                        <div className=\"col-md-4 col-10 mx-auto\" key={key}>\r\n                                            <div class=\"card\">\r\n                                                <img src={d.images[0]} class=\"card-img-top\" alt='image' />\r\n                                                <div class=\"card-body\">\r\n                                                    <h5 class=\"card-title\">{d.companyName}</h5>\r\n                                                    <p class=\"card-text\">{d.description}</p>\r\n                                                    <NavLink to={`/company/${d._id}`} class=\"btn btn-primary\">EXPLORE</NavLink>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>    \r\n                                    ):null\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default Company;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\jobform\\jobforms.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\registration.js",["342"],"import React,{useEffect}  from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form,Button,Row,Col,Spinner } from 'react-bootstrap';\nimport classes from './login.module.css';\nimport Olx from '../../assets/robot.png'; \nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { Login } from '../../entities/action/action';\nimport ClientLoginNav from '../Navbars/clientLoginNav/navbar';\nimport {Link} from 'react-router-dom';\n\n\n\nconst validationSchema=Yup.object().shape({\n    email:Yup.string()\n    .required(\"Must Be A User ID\"),\n    password:Yup.string()\n   \n    .required(\"Must Be a Password\")\n})\n\nconst ClientRegistration = (props)=> { \n\n    const dispatch = useDispatch();\n\n    const isLoggedIn = useSelector(state=>state.account.isLoggedIn);\n    const isLoading = useSelector(state=>state.account.isLoading);\n\n\n    useEffect(()=>{\n        if(isLoggedIn){\n            props.history.push('/');\n        }\n        \n    },[isLoggedIn])\n  return (\n    <>\n    <div style={{backgroundColor: 'rgb(0, 19, 38)',minHeight:'100vh'}}>\n        <ClientLoginNav/>\n        {\n            !isLoading?\n            <div className={classes.Box}>\n            <Row>\n                <Col xl={6} md={12}>\n                    <img src={Olx} alt=\"LoginPage\" style={{margin:'auto'}} className={classes.Img}></img>\n                </Col>\n                <Col xl={6} md={12} style={{display:'flex',flexDirection:'column',alignSelf:'center'}}>\n                    <div style={{marginBottom:'5%'}} className={classes.ReduceSize}>\n                        <center>\n                            <h2 style={{color:\"white\"}} >Register for your EasyApply Account</h2>  \n                        </center>  \n                    </div>\n                    <Formik \n                    initialValues={{ email: '', password: '' }} \n                    validationSchema={validationSchema}\n                    onSubmit={\n                        (values,{setSubmitting,resetForm})=>{\n                            setSubmitting(true);\n                            console.log(values)\n                            dispatch(Login(values,\"2\"))\n                            resetForm();\n                        }\n                    }>\n                        {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting})=>(\n                            <Form onSubmit={handleSubmit}>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Email ID</Form.Label>\n                                    <Form.Control\n                                    name=\"email\"\n                                    type=\"email\" \n                                    placeholder=\"Enter Email ID\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                    className={touched.email ? \"has-error\":null}/> \n                                    <Form.Text className=\"text-muted\">\n                                    {errors.email && touched.email && errors.email}\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control \n                                    name=\"password\"\n                                    type=\"password\" \n                                    placeholder=\"Password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    className={touched.email && errors.name ? \"has-error\":null} />\n                                    <Form.Text className=\"text-muted\">\n                                    {errors.password && touched.password && errors.password}\n                                    </Form.Text>\n                                </Form.Group>\n                                <center>\n                                <Button \n                                size=\"lg\" \n                                variant=\"primary\" \n                                type=\"submit\" \n                                style={{margin:'3% 0'}}\n                                disabled={isSubmitting}\n                                id=\"matomoRegisterClick\"\n                                >\n                                Register\n                                </Button>\n                                <Button \n                                size=\"lg\" \n                                variant=\"danger\"  \n                                style={{margin:'3% 2%'}}\n                                onClick={()=>props.history.push('/')}\n                                id=\"matomoRegisterCancel\"\n                                >\n                                Cancel\n                                </Button>\n                                </center>\n                                <center>\n                                    <Link to=\"/login\">Already Registered? Login here!!</Link>\n                                </center>\n                            </Form>\n                        )}\n                    </Formik>       \n                </Col>\n            </Row>\n        </div>:\n        <center> \n            <Spinner animation=\"border\" variant=\"light\" />\n        </center>\n        }\n    </div>  \n    </> \n      \n  );\n}\n\nexport default ClientRegistration;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Jobs\\job.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Employers\\employers.js",["343"],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\home\\home.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\actionType.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\viewjob\\viewjob.js",["344"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './viewjob.module.css';\r\nimport ClientNav from '../Navbars/clientSideNavbar/navbar';\r\nimport {Container,Row,Col,Button,Card} from 'react-bootstrap';\r\nimport Footer from '../footer/footer';\r\nimport { Link } from 'react-router-dom';\r\nimport { GetJobById,GetLatestJobs } from '../../utilities/apiIntegration';\r\nimport Jobforms from '../jobform/jobforms';\r\n\r\nconst Companyabouts = (props)=>{\r\n    const [data,updateData] = useState({});\r\n    const [jobs,updateJobs] = useState([]);\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            const res = await GetJobById({id:props.match.params.id});\r\n            if(res.message===\"success\"){\r\n                updateData(res.user);\r\n            }\r\n            const response = await GetLatestJobs();\r\n            if(response.message===\"success\"){\r\n                updateJobs(response.user);\r\n            }\r\n        })()\r\n    },[])\r\n    return(\r\n        <>\r\n        <ClientNav />\r\n        <Container style={{minHeight:'75vh',height:'100%'}}>\r\n            <Row className={classes.Background}>\r\n                {\r\n                    Object.keys(data).length>0?\r\n                    <>\r\n                        <Col md={6} xs={12}>\r\n                            <div className={classes.Centered}>\r\n                                <h5 className={classes.P}>Job Position : {data.jobPosition}</h5>\r\n                                <p>Location : {data.location}</p>\r\n                                <h5 className={classes.P}>Primary Skills:</h5>\r\n                                <p>{data.primarySkills}</p>\r\n                                <h5 className={classes.P}>Secondary Skills:</h5>\r\n                                <p>{data.secondarySkills}</p>\r\n                                <h5 className={classes.P}>Experience:</h5>\r\n                                <p>{data.experience}</p>\r\n                                <h5 className={classes.P}>Expected Salary:</h5>\r\n                                <p>{data.expectedSalary} LPA</p>\r\n                                <h5 className={classes.P}>Responsibilities:</h5>\r\n                                <p>{data.responsibilities}</p>\r\n                                <div>\r\n                                    <h5 className={classes.P}>Job Description</h5>\r\n                                    <p>{data.description}</p>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6} xs={12} style={{height:'100%',display:'flex',alignSelf:'center',flexDirection:'column'}}>\r\n                            <Jobforms id={data._id}/>\r\n                        </Col>\r\n                    </>:null\r\n                }\r\n            </Row>\r\n\r\n            <div className=\"my-5\">\r\n                <h2 className=\"text-center font-weight-lighter\">Similar Jobs</h2>\r\n            </div>\r\n            <Container>\r\n            <Row>\r\n                {\r\n                    jobs.length>0?jobs.map((job,key)=>\r\n                    <Col lg={4} sm={6} xs={12} key={key}>\r\n                        <Card\r\n                            text=\"dark\"\r\n                        >\r\n                            <Card.Header>Company: {job.companyName}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title>{job.jobPosition}</Card.Title>\r\n                                <Card.Text>Locations: {job.location}</Card.Text>\r\n                                <div style={{display:'flex',justifyContent:'center'}}>\r\n                                    <Link to={`job/${job._id}`}>\r\n                                        <Button variant=\"secondary\" style={{marginRight:'5px'}}>Info</Button>\r\n                                    </Link>\r\n                                    <Button variant=\"success\">Apply</Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Card.Text>Posted On: {job.jobDate}</Card.Text>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                    ):null\r\n                }\r\n            </Row>\r\n        </Container>\r\n        </Container>\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\nexport default Companyabouts;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\footer\\footer.js",["345","346","347","348"],"import React from 'react';\nimport classes from \"./footer.module.css\"\nimport instagram from '../../assets/instagram.png';\nimport facebook from '../../assets/facebook.png';\nimport twitter from '../../assets/twitter.png';\nimport linkedin from '../../assets/linkedin.png';\nimport Logo from '../Logo/logo';\n\nconst Footer = (props)=>{\n    return(\n        <div style={{marginTop:'10px'}}>\n            <div className={classes.Footer} style={{backgroundColor:\"#1B1B1D\",backgroundSize:\"100% 100%\"}} >\n                <center>\n                    <h2>\n                        <Logo/>\n                    </h2>\n                </center>\n                <ul className={classes.U}>\n                    <a href=\"#\">About</a>\n                    <a href=\"#\">Services</a>\n                    <a href=\"#\">Team</a>\n                    <a href=\"#\">Privacy</a>\n                </ul>\n            </div>\n            <div className={classes.Img}>\n                <img src={instagram} alt=\"Social\" className={classes.Social}/>\n                <img src={facebook} alt=\"Social\" className={classes.Social}/>\n                <img src={twitter} alt=\"Social\" className={classes.Social}/>\n                <img src={linkedin} alt=\"Social\" className={classes.Social}/>\n                <span style={{float:'right',color:'white'}} className={classes.Copyright}>Copyright <i className=\"far fa-copyright\"></i> 2021 easyapply. All rights reserved</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\carousel\\employersCarousel.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\carousel\\carousel.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\action\\action.js",["349","350"],"import * as actionType from '../actionType';\n\nexport const Login = (data,type)=>{\n    return async dispatch=>{\n        dispatch(loginInit())\n        try{\n            console.log(data);\n            let url = '';\n            if(type==\"1\"){\n                url = 'https://easyapply-jobs-internship.herokuapp.com/user/login';\n            }else{\n                url = 'https://easyapply-jobs-internship.herokuapp.com/user/registration'\n            }\n            const response = await fetch(url,{\n                method: \"post\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data)\n              });\n            const json = await response.json();\n            if(json.message!==\"success\"){\n                dispatch(Logout())\n            }else{\n                const expirationDate = new Date(new Date().getTime() + 10*60*60*1000)\n                const expirationTime = 10*60*60*1000;\n                localStorage.setItem('expirationDate',expirationDate);\n                localStorage.setItem('token',json.token);\n                dispatch(checkAuthTimeout(expirationTime));\n                dispatch(loginSuccess(json.data))\n            }\n        }catch(err){dispatch(Logout())}\n    }\n}\n\nexport const Logout = ()=>{\n    return  dispatch=>{\n        dispatch({\n            type:actionType.LOGOUT_INIT\n        })\n        try{\n            localStorage.removeItem('token');\n            localStorage.removeItem('expirationDate');\n            dispatch({\n                type:actionType.LOGOUT_SUCCESS,\n            })\n        }catch(err){\n            dispatch({\n                type:actionType.AUTH_FAIL,\n                payload:err\n            })\n        }\n    }\n}\n\nexport const loginInit = ()=>{\n    return {\n        type:actionType.AUTH_INIT\n    }\n}\n\nexport const loginSuccess = (data)=>{\n    return {\n        type:actionType.AUTH_SUCCESS,\n        payload:data\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(Logout());\n        }, expirationTime);\n    };\n};\n\n\nexport const checkAuthState = ()=>{\n    return async dispatch=>{\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(Logout())\n        }else{\n            const expirationDate = localStorage.getItem('expirationDate');\n            if(expirationDate<=new Date()){\n                dispatch(Logout());\n            }else{\n                const bearer = 'Bearer '+ token;\n                dispatch(loginInit())\n                const response = await fetch('https://easyapply-jobs-internship.herokuapp.com/user/checkAuthState',{\n                    method:'get',\n                    headers:{\n                        'Authorization':bearer,\n                        'Content-Type':'application/json'\n                    }\n                });\n                const json = await response.json();\n                if(json.message == \"success\"){\n                    dispatch(checkAuthTimeout(new Date(expirationDate).getTime() - new Date().getTime()));\n                    dispatch(loginSuccess(json.data))\n                }else{\n                    dispatch(Logout())\n                }\n            }\n        }\n    }\n}","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientSideNavbar\\navbar.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientLoginNav\\navbar.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\clientEmployerNav\\clientEmployerNav.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Body\\body.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Logo\\logo.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\utilities\\apiIntegration.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\layouts\\Admin.js",["351","352"],"import React, { useEffect } from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"../components/Navbars/Navbar.js\";\nimport Footer from \"../components/Footer2/Footer.js\";\nimport Sidebar from \"../components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin.js\";\n\nimport routes from \"../routes.js\";\n\nimport styles from \"../assets/jss/material-dashboard-react/layouts/adminStyle.js\";\n\nimport bgImage from \"../assets/img/sidebar-2.jpg\";\nimport logo from \"../assets/img/reactlogo.png\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { Fragment } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { checkAuthState } from \"../entities/action/companyAction.js\";\n\nlet ps;\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ ...rest },props) {\n\n  const isLoggedIn = useSelector(state=>state.companyAccount.isLoggedIn);\n  const dispatch = useDispatch();\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleImageClick = image => {\n    setImage(image);\n  };\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n    React.useEffect(() => {\n      if(isLoggedIn){\n        if (navigator.platform.indexOf(\"Win\") > -1) {\n          ps = new PerfectScrollbar(mainPanel.current, {\n            suppressScrollX: true,\n            suppressScrollY: false\n          });\n          document.body.style.overflow = \"hidden\";\n        }\n        window.addEventListener(\"resize\", resizeFunction);\n        // Specify how to clean up after this effect:\n        return function cleanup() {\n          if (navigator.platform.indexOf(\"Win\") > -1) {\n            ps.destroy();\n          }\n          window.removeEventListener(\"resize\", resizeFunction);\n        };\n      }\n    }, [mainPanel,isLoggedIn]);\n    useEffect(()=>{\n      if(!isLoggedIn){\n         window.location.href=\"/companyLogin\";\n      }\n    },[isLoggedIn])\n\n  return (\n    <div className={classes.wrapper}>\n      {\n        isLoggedIn?\n        <Fragment>\n          <Sidebar\n            routes={routes}\n            logoText={\"Easy Apply\"}\n            logo={logo}\n            image={image}\n            handleDrawerToggle={handleDrawerToggle}\n            open={mobileOpen}\n            color={color}\n            {...rest}\n          />\n          <div className={classes.mainPanel} ref={mainPanel}>\n            <Navbar\n              routes={routes}\n              handleDrawerToggle={handleDrawerToggle}\n              {...rest}\n            />\n            {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n            {getRoute() ? (\n              <div className={classes.content}>\n                <div className={classes.container}>{switchRoutes}</div>\n              </div>\n            ) : (\n              <div className={classes.map}>{switchRoutes}</div>\n            )}\n            {getRoute() ? <Footer /> : null}\n            <FixedPlugin\n              handleImageClick={handleImageClick}\n              handleColorClick={handleColorClick}\n              bgColor={color}\n              bgImage={image}\n              handleFixedClick={handleFixedClick}\n              fixedClasses={fixedClasses}\n            />\n          </div>\n        </Fragment>:\n        <div style={{display:'flex',justifyContent:'center',flexDirection:'column',alignItems:'center',height:'100vh'}}>\n          <h2>404 No Page Found</h2>\n          <Link to=\"/\">\n            <Button variant=\"danger\">Go Back</Button>\n          </Link>\n        </div>\n      }\n    </div>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\routes.js",["353"],"// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Person from \"@material-ui/icons/Person\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\nimport BubbleChart from \"@material-ui/icons/BubbleChart\";\n\n// core components/views for Admin layout\nimport DashboardPage from \"./views/Dashboard/Dashboard.js\";\nimport UserProfile from \"./views/UserProfile/UserProfile.js\";\nimport TableList from \"./views/TableList/TableList.js\";\nimport Typography from \"./views/Typography/Typography.js\";\n\nimport NotificationsPage from \"./views/Notifications/Notifications.js\";\n\n\nconst dashboardRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: Dashboard,\n    component: DashboardPage,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/user\",\n    name: \"Post Job\",\n    icon: Person,\n    component: UserProfile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/table\",\n    name: \"Job Posted\",\n    icon: \"content_paste\",\n    component: TableList,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/typography\",\n    name: \"Manage UI\",\n    icon: LibraryBooks,\n    component: Typography,\n    layout: \"/admin\"\n  },\n\n  {\n    path: \"/notifications\",\n    name: \"Teams\",\n    icon: Person,\n    component: NotificationsPage,\n    layout: \"/admin\"\n  },\n  \n];\n\nexport default dashboardRoutes;\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\Navbar.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\FixedPlugin\\FixedPlugin.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\layouts\\adminStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\RTLNavbarLinks.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Navbars\\AdminNavbarLinks.js",["354","355"],"import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\n \n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\n \nimport Button from \"../CustomButtons/Button.js\";\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { Logout } from \"../../entities/action/companyAction.js\";\nimport { useDispatch } from \"react-redux\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseProfile = () => {\n    setOpenProfile(null);\n  };\n  return (\n    <div>\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n          <Hidden mdUp implementation=\"css\">\n            <p className={classes.linkText}>Profile</p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseProfile}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={()=>dispatch(Logout())}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\CustomButtons\\Button.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\buttonStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\headerLinksStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\dropdownStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\headerStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\rtlHeaderLinksStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\CustomInput\\CustomInput.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\customInputStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\sidebarStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Dashboard\\Dashboard.js",["356","357"],"import React from \"react\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\n \nimport AccessTime from \"@material-ui/icons/AccessTime\";\n \n// core ../../components\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Table from \"../../components/Table/Table.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\n\n\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n} from \"../../variables/charts.js\";\n\nimport styles from \"../../assets/jss/material-dashboard-react/views/dashboardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  return (\n    <div>\n     \n      <GridContainer>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"success\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={dailySalesChart.data}\n                type=\"Line\"\n                options={dailySalesChart.options}\n                listener={dailySalesChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Applications Per Month</h4>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> updated 4 minutes ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n    \n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"warning\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={emailsSubscriptionChart.data}\n                type=\"Bar\"\n                options={emailsSubscriptionChart.options}\n                responsiveOptions={emailsSubscriptionChart.responsiveOptions}\n                listener={emailsSubscriptionChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Job Posted</h4>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> Updated 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={4}>\n          <Card chart>\n            <CardHeader color=\"danger\">\n              <ChartistGraph\n                className=\"ct-chart\"\n                data={completedTasksChart.data}\n                type=\"Line\"\n                options={completedTasksChart.options}\n                listener={completedTasksChart.animation}\n              />\n            </CardHeader>\n            <CardBody>\n              <h4 className={classes.cardTitle}>Statistics Subinformation</h4>\n            </CardBody>\n            <CardFooter chart>\n              <div className={classes.stats}>\n                <AccessTime /> Updated 2 days ago\n              </div>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\UserProfile\\UserProfile.js",["358"],"import React from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport { Formik } from \"formik\";\nimport { Form,Col } from \"react-bootstrap\";\nimport {PostJob} from '../../utilities/apiIntegration';\n\n\nconst styles = {\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function UserProfile() {\n  const classes = useStyles();\n  return (\n    <div>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={8}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Post a job</h4>\n              <p className={classes.cardCategoryWhite}>Job Requirement Details</p>\n            </CardHeader>\n            <CardBody>\n              <Formik\n                initialValues={{position:'',primary:'',secondary:'',experience:'',responsibilities:'',package:'',locations:'',description:''}}\n                onSubmit={\n                  async(values,{setSubmitting,resetForm})=>{\n                      setSubmitting(true);\n                      const newData = {\n                        jobPosition:values.position,\n                        primarySkills:values.primary,\n                        secondarySkills:values.secondary,\n                        experience:values.experience,\n                        responsibilities:values.responsibilities,\n                        description:values.description,\n                        expectedSalary:values.package,\n                        location:values.locations\n                      }\n                      const response = await PostJob(newData);\n                      if(response.message==\"success\"){\n                        alert(\"Successfully Posted Job\");\n                      }\n                      resetForm();\n                      setSubmitting(false);\n                  }\n                }\n              >\n                {({handleBlur,handleChange,handleSubmit,values})=>(\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formBasicPosition\">\n                        <Form.Label>Job Position:</Form.Label>\n                        <Form.Control\n                          name=\"position\"\n                          type=\"text\" \n                          placeholder=\"Enter Job Position\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.position}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicLocations\">\n                        <Form.Label>Locations:</Form.Label>\n                        <Form.Control\n                          name=\"locations\"\n                          type=\"text\" \n                          placeholder=\"Locations\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.locations}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formBasicPrimary\">\n                        <Form.Label>Primary Skills:</Form.Label>\n                        <Form.Control\n                          name=\"primary\"\n                          type=\"text\" \n                          placeholder=\"Enter Primary Skills\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.primary}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicSecondary\">\n                        <Form.Label>Secondary Skills:</Form.Label>\n                        <Form.Control\n                          name=\"secondary\"\n                          type=\"text\" \n                          placeholder=\"Enter Secondary Skills\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.secondary}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicExperience\">\n                        <Form.Label>Experience Required:</Form.Label>\n                        <Form.Control\n                          name=\"experience\"\n                          type=\"text\" \n                          placeholder=\"(0-1 year)\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.experience}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicPackage\">\n                        <Form.Label>Expected Package(LPA):</Form.Label>\n                        <Form.Control\n                          name=\"package\"\n                          type=\"number\" \n                          placeholder=\"Enter\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.package}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Group controlId=\"formBasicResponsibilities\">\n                        <Form.Label>Responsibilities:</Form.Label>\n                        <Form.Control\n                          name=\"responsibilities\"\n                          type=\"text\" \n                          placeholder=\"Enter Responsibilities\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.responsibilities}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicDescription\">\n                        <Form.Label>Description:</Form.Label>\n                        <Form.Control\n                          name=\"description\"\n                          type=\"text\" \n                          placeholder=\"Enter Description\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.description}\n                          required\n                        /> \n                      </Form.Group>\n                      <center>\n                        <Button color=\"primary\" type=\"submit\">Submit</Button>\n                      </center>\n                  </Form>\n                )}\n              </Formik>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </div>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\TableList\\TableList.js",["359"],"import React, { useEffect,useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport Table from \"../../components/Table/Table.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport { GetJobById, GetJobsPosted } from \"../../utilities/apiIntegration.js\";\nimport {Button,NavDropdown} from 'react-bootstrap';\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function TableList() {\n  const classes = useStyles();\n  const [data,updateData] = useState([]);\n  const [dataSet,updateDataSet] = useState([]);\n  const [active,updateActive] = useState('1');\n  useEffect(()=>{\n    (async()=>{\n      const response = await GetJobsPosted()\n      if(response.message===\"success\"&&response.data!=undefined&&response.data.length>0){\n        let temp = [];\n        for(let i = 0;i<response.data.length;i++){\n          let t = [];\n          t[0] = i+1;\n          t[1] = response.data[i];\n          t[2] = <Button onClick={()=>handleMoreInfo(response.data[i])}>More Info</Button>\n          temp.push(t);\n        }\n        updateData(temp);\n      }\n    })()\n  },[])\n\n  const handleMoreInfo = async(id)=>{\n    updateActive(\"2\");\n    const res = await GetJobById({id});\n    if(res.message===\"success\"&&res.user.studentsApplied!==undefined&&res.user!==undefined){\n      let temp = [];\n      for(let i = 0;i<res.user.studentsApplied.length;i++){\n        let t = [];\n        t[0] = i+1;\n        t[1] = res.user.studentsApplied[i].studentId;\n        t[2] = res.user.studentsApplied[i].studentName;\n        t[3] = res.user.studentsApplied[i].email;\n        t[4] = res.user.studentsApplied[i].phone;\n        t[5] = `${res.user.studentsApplied[i].workExperience} year`;\n        t[6] = res.user.studentsApplied[i].status;\n        t[7] = <Button variant=\"warning\">Open</Button>\n        t[8] =  <NavDropdown title=\"Select\" id=\"basic-nav-dropdown\"> \n                  <div style={{display:'flex',flexDirection:'column'}}>\n                    <Button variant=\"warning\" style={{marginBottom:'15px'}}>Under Review</Button>\n                    <Button variant=\"success\" style={{marginBottom:'15px'}}>Hired</Button>\n                    <Button variant=\"danger\">Rejected</Button>\n                  </div>\n                </NavDropdown>\n        temp.push(t);\n      }\n      updateDataSet(temp);\n    }\n  }\n \n  return (\n    <>\n      {\n        active===\"1\"?\n        <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Job Posted</h4>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"primary\"\n                tableHead={[\"S.No\", \"Job ID\", \"Action\"]}\n                tableData={data}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>:\n      <GridContainer>\n        <Button variant=\"light\" onClick={()=>updateActive(\"1\")}>{\"<-\"} Back</Button>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Students Applied</h4>\n            </CardHeader>\n            <CardBody>\n              <Table\n                tableHeaderColor=\"primary\"\n                tableHead={[\"S.No\", \"Student ID\", \"Student Name\",\"Email\",\"Phone\",\"Work Experience\",\"Status\",\"Resume\",\"Update Status\"]}\n                tableData={dataSet}\n              />\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n      }\n    </>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Typography\\Typography.js",["360"],"import React, { useState } from \"react\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\n \nimport Card from \"../../components/Card/Card.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport {Form,Col,Button} from  'react-bootstrap'\nimport { Formik } from \"formik\";\nimport {Image, UpdateProfile} from '../../utilities/apiIntegration';\nimport {DropzoneArea} from 'material-ui-dropzone'\n\n\nconst styles = {\n  typo: {\n    paddingLeft: \"25%\",\n    marginBottom: \"40px\",\n    position: \"relative\"\n  },\n  note: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    bottom: \"10px\",\n    color: \"#c0c1c2\",\n    display: \"block\",\n    fontWeight: \"400\",\n    fontSize: \"13px\",\n    lineHeight: \"13px\",\n    left: \"0\",\n    marginLeft: \"20px\",\n    position: \"absolute\",\n    width: \"260px\"\n  },\n  cardCategoryWhite: {\n    color: \"rgba(255,255,255,.62)\",\n    margin: \"0\",\n    fontSize: \"14px\",\n    marginTop: \"0\",\n    marginBottom: \"0\"\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function TypographyPage() {\n  const [logo,updateLogo] = useState({});\n  const [video,updateVideo] = useState({});\n  const [images,updateImages] = useState([]);\n  const classes = useStyles();\n  const handleImages = (inpFile)=>{\n    updateImages(inpFile);\n  }\n  return (\n    <Card>\n      <CardHeader color=\"primary\">\n        <h4 className={classes.cardTitleWhite}>Update Your View Profile</h4>\n      </CardHeader>\n      <CardBody>\n          <Formik\n                initialValues={{noOfEmployees:'',locations:'',companyLogo:'',companyKeyWords:'',companyQuotes:'',description:'',workingAtCompany:'',videos:'',images:''}}\n                onSubmit={\n                  async(values,{setSubmitting,resetForm})=>{\n                      setSubmitting(true);\n                      const img1 = await Image(logo);\n                      const vid1 = await Image(video);\n                      let imgArr = [];\n                      for(let i=0;i<images.length;i++){\n                        let temp = await Image(images[i]);\n                        imgArr.push(temp);\n                      }\n                      const newData = {\n                        noOfEmployees:values.noOfEmployees,\n                        locations:values.locations,\n                        companyLogo:img1,\n                        companyKeyWords:values.companyKeyWords,\n                        companyQuotes:values.companyQuotes,\n                        description:values.description,\n                        workingAtCompany:values.workingAtCompany,\n                        videos:vid1,\n                        images:imgArr\n                      }\n                      const response = await UpdateProfile(newData);\n                      if(response.message==\"success\"){\n                        alert(\"Successfully Updated Profile\");\n                        window.location.reload();\n                      }\n                      resetForm();\n                      setSubmitting(false);\n                  }\n                }\n              >\n                {({handleBlur,handleChange,handleSubmit,values})=>(\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Number Of Employees</Form.Label>\n                            <Form.Control \n                                as=\"select\"\n                                name=\"noOfEmployees\"\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                value={values.noOfEmployees}\n                                required\n                            >\n                            <option value=\"\">---select---</option>\n                            <option value=\"0-100\">0-100</option>\n                            <option value=\"101-500\">101-500</option>\n                            <option value=\"501-1000\">501-1000</option>\n                            <option value=\"1001-5000\">1001-5000</option>\n                            <option value=\"5000+\">5000+</option>\n                            </Form.Control>\n                        </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicLocations\">\n                        <Form.Label>Locations:</Form.Label>\n                        <Form.Control\n                          name=\"locations\"\n                          type=\"text\" \n                          placeholder=\"Locations\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.locations}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formBasicPrimary\">\n                        <Form.Label>Company Logo:</Form.Label>\n                        <Form.Control\n                          name=\"logo\"\n                          type=\"file\" \n                          onChange={(e)=>updateLogo(e.target.files[0])}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicResponsibilities\">\n                        <Form.Label>Video:</Form.Label>\n                        <Form.Control\n                          name=\"video\"\n                          type=\"file\" \n                          onChange={(e)=>updateVideo(e.target.files[0])}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicExperience\">\n                        <Form.Label>Company Quotes:</Form.Label>\n                        <Form.Control\n                          name=\"companyQuotes\"\n                          type=\"text\" \n                          placeholder=\"Enter Company Quotes\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.companyQuotes}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group as={Col} controlId=\"formBasicSecondary\">\n                        <Form.Label>Keywords:</Form.Label>\n                        <Form.Control\n                          name=\"companyKeyWords\"\n                          type=\"text\" \n                          placeholder=\"Enter Keywords\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.companyKeyWords}\n                          required\n                        /> \n                      </Form.Group>\n                    </Form.Row>\n                    <Form.Group controlId=\"formBasicPackage\">\n                        <Form.Label>Working At Company:</Form.Label>\n                        <Form.Control\n                          name=\"workingAtCompany\"\n                          type=\"text\" \n                          placeholder=\"Enter How it's Like Working In The Company..\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.workingAtCompany}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicDescription\">\n                        <Form.Label>Description:</Form.Label>\n                        <Form.Control\n                          name=\"description\"\n                          type=\"text\" \n                          placeholder=\"Enter Description\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.description}\n                          required\n                        /> \n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicPrimary\">\n                        <Form.Label>Company Images:</Form.Label>\n                        <DropzoneArea\n                          onChange={handleImages}\n                          filesLimit={3}\n                        />\n                      </Form.Group>\n                      <center>\n                        <Button color=\"primary\" type=\"submit\">Submit</Button>\n                      </center>\n                  </Form>\n                )}\n              </Formik>\n      </CardBody>\n    </Card>\n  );\n}\n","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\views\\Notifications\\Notifications.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardFooter.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\Card.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardHeader.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardBody.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Grid\\GridItem.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Grid\\GridContainer.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardFooterStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Card\\CardIcon.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Table\\Table.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\views\\dashboardStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Snackbar\\Snackbar.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Snackbar\\SnackbarContent.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\snackbarContentStyle.js",[],["361","362"],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Quote.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Muted.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Primary.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Success.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Info.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Warning.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Typography\\Danger.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\typographyStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\variables\\charts.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\Footer2\\Footer.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\assets\\jss\\material-dashboard-react\\components\\footerStyle.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\reducer\\companyReducer.js",[],"C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\components\\clientAccount\\companyLogin.js",["363","364"],"import React,{useEffect}  from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Form,Button,Row,Col,Spinner } from 'react-bootstrap';\r\nimport classes from './login.module.css';\r\nimport Olx from '../../assets/robot.png'; \r\nimport {Formik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Login } from '../../entities/action/companyAction';\r\nimport { useMatomo } from '@datapunt/matomo-tracker-react'\r\n\r\n\r\n\r\nconst validationSchema=Yup.object().shape({\r\n    email:Yup.string()\r\n    .required(\"Must Be A User ID\"),\r\n    password:Yup.string()\r\n   \r\n    .required(\"Must Be a Password\")\r\n})\r\n\r\nconst CompanyLogin = (props)=> { \r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(state=>state.companyAccount.isLoggedIn);\r\n    const isLoading = useSelector(state=>state.companyAccount.isLoading);\r\n    useEffect(()=>{\r\n        if(isLoggedIn){\r\n            props.history.push('/admin');\r\n        }\r\n        \r\n    },[isLoggedIn])\r\n\r\n    const { trackPageView, trackEvent } = useMatomo()\r\n    React.useEffect(() => {\r\n        trackPageView({\r\n            documentTitle: 'Registration Page', // optional\r\n            href: window.location.pathname+window.location.search, // optional\r\n          })\r\n    }, [])\r\n    const handleOnClick = () => {\r\n        // Track click on button\r\n        trackEvent({ category: 'Login Page', action: 'Login Button Clicked' })\r\n    }\r\n  return (\r\n    <>\r\n    <div style={{backgroundColor: 'rgb(0, 19, 38)',minHeight:'100vh'}} id=\"matomoCompanyLogin\">\r\n        <div className={classes.Box} style={{paddingTop:'10%'}}>\r\n            {\r\n                !isLoading?\r\n                <Row>\r\n                <Col xl={6} md={12}>\r\n                    <img src={Olx} alt=\"LoginPage\" style={{margin:'auto'}} className={classes.Img}></img>\r\n                </Col>\r\n                <Col xl={6} md={12} style={{display:'flex',flexDirection:'column',alignSelf:'center'}}>\r\n                    <div style={{marginBottom:'5%'}} className={classes.ReduceSize}>\r\n                        <center>\r\n                            <h2 style={{color:\"white\"}} >Login to your Dashboad</h2>  \r\n                        </center>  \r\n                    </div>\r\n                    <Formik \r\n                    initialValues={{ email: '', password: '' }} \r\n                    validationSchema={validationSchema}\r\n                    onSubmit={\r\n                        (values,{setSubmitting,resetForm})=>{\r\n                            handleOnClick();\r\n                            setSubmitting(true);\r\n                            console.log(values)\r\n                            dispatch(Login(values,\"1\"))\r\n                            resetForm();\r\n                            setSubmitting(false);\r\n                        }\r\n                    }>\r\n                        {({values,errors,touched,handleChange,handleBlur,handleSubmit,isSubmitting})=>(\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Email ID</Form.Label>\r\n                                    <Form.Control\r\n                                    name=\"email\"\r\n                                    type=\"email\" \r\n                                    placeholder=\"Enter Email ID\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.email}\r\n                                    className={touched.email ? \"has-error\":null}/> \r\n                                    <Form.Text className=\"text-muted\">\r\n                                    {errors.email && touched.email && errors.email}\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control \r\n                                    name=\"password\"\r\n                                    type=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    className={touched.email && errors.name ? \"has-error\":null} />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                    {errors.password && touched.password && errors.password}\r\n                                    </Form.Text>\r\n                                </Form.Group>\r\n                                <center>\r\n                                <Button \r\n                                size=\"lg\" \r\n                                variant=\"primary\" \r\n                                type=\"submit\" \r\n                                style={{margin:'3% 0'}}\r\n                                disabled={isSubmitting}\r\n                                >\r\n                                Login\r\n                                </Button>\r\n                                <Button \r\n                                size=\"lg\" \r\n                                variant=\"danger\"  \r\n                                style={{margin:'3% 2%'}}\r\n                                onClick={()=>props.history.push('/employers')}\r\n                                >\r\n                                Cancel\r\n                                </Button>\r\n                                </center>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>       \r\n                </Col>\r\n            </Row>\r\n                :\r\n                <center> \r\n                    <Spinner animation=\"border\" variant=\"light\" />\r\n                </center>\r\n            }\r\n        </div>\r\n    </div>  \r\n    </> \r\n      \r\n  );\r\n}\r\n\r\nexport default CompanyLogin;","C:\\Users\\Dell\\Desktop\\react Projects\\eassyapplyclient-main\\client\\src\\entities\\action\\companyAction.js",["365"],"import * as actionType from '../actionType';\r\n\r\nexport const Login = (data,type)=>{\r\n    return async dispatch=>{\r\n        dispatch(loginInit())\r\n        try{\r\n            const response = await fetch('https://easyapply-jobs-internship.herokuapp.com/company/login',{\r\n                method: \"post\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data)\r\n              });\r\n            const json = await response.json();\r\n            if(json.message!==\"success\"){\r\n                dispatch(Logout())\r\n            }else{\r\n                const companyExpirationDate = new Date(new Date().getTime() + 10*60*60*1000)\r\n                const expirationTime = 10*60*60*1000;\r\n                localStorage.setItem('companyExpirationDate',companyExpirationDate);\r\n                localStorage.setItem('companyToken',json.token);\r\n                dispatch(checkAuthTimeout(expirationTime));\r\n                dispatch(loginSuccess(json))\r\n            }\r\n        }catch(err){dispatch(Logout())}\r\n    }\r\n}\r\n\r\nexport const Logout = ()=>{\r\n    console.log(\"Logout\");\r\n    return  dispatch=>{\r\n        dispatch({\r\n            type:actionType.COMPANY_LOGOUT_INIT\r\n        })\r\n        try{\r\n            localStorage.removeItem('companyToken');\r\n            localStorage.removeItem('companyExpirationDate');\r\n            dispatch({\r\n                type:actionType.COMPANY_LOGOUT_SUCCESS,\r\n            })\r\n        }catch(err){\r\n            dispatch({\r\n                type:actionType.COMPANY_AUTH_FAIL,\r\n                payload:err\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginInit = ()=>{\r\n    return {\r\n        type:actionType.COMPANY_AUTH_INIT\r\n    }\r\n}\r\n\r\nexport const loginSuccess = (data)=>{\r\n    return {\r\n        type:actionType.COMPANY_AUTH_SUCCESS,\r\n        payload:data\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(Logout());\r\n        }, expirationTime);\r\n    };\r\n};\r\n\r\n\r\nexport const checkCompanyAuthState = ()=>{\r\n    return async dispatch=>{\r\n        const token = localStorage.getItem('companyToken');\r\n        if(!token){\r\n            dispatch(Logout())\r\n        }else{\r\n            const companyExpirationDate = localStorage.getItem('companyExpirationDate');\r\n            if(companyExpirationDate<=new Date()){\r\n                dispatch(Logout());\r\n            }else{\r\n                const bearer = 'Bearer '+ token;\r\n                dispatch(loginInit())\r\n                const response = await fetch('https://easyapply-jobs-internship.herokuapp.com/company/checkAuthState',{\r\n                    method:'get',\r\n                    headers:{\r\n                        'Authorization':bearer,\r\n                        'Content-Type':'application/json'\r\n                    }\r\n                });\r\n                const json = await response.json();\r\n                if(json.message == \"success\"){\r\n                    dispatch(checkAuthTimeout(new Date(companyExpirationDate).getTime() - new Date().getTime()));\r\n                    dispatch(loginSuccess(json))\r\n                }else{\r\n                    dispatch(Logout())\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","severity":1,"message":"371","line":23,"column":5,"nodeType":"372","endLine":23,"endColumn":7,"suggestions":"373"},{"ruleId":"370","severity":1,"message":"374","line":29,"column":6,"nodeType":"372","endLine":29,"endColumn":8,"suggestions":"375"},{"ruleId":"370","severity":1,"message":"374","line":31,"column":8,"nodeType":"372","endLine":31,"endColumn":10,"suggestions":"376"},{"ruleId":"370","severity":1,"message":"377","line":44,"column":7,"nodeType":"372","endLine":44,"endColumn":19,"suggestions":"378"},{"ruleId":"370","severity":1,"message":"379","line":24,"column":7,"nodeType":"372","endLine":24,"endColumn":9,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":42,"column":49,"nodeType":"383","endLine":42,"endColumn":107},{"ruleId":"370","severity":1,"message":"377","line":35,"column":7,"nodeType":"372","endLine":35,"endColumn":19,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":29,"column":23,"nodeType":"387","messageId":"388","endLine":29,"endColumn":25},{"ruleId":"370","severity":1,"message":"379","line":24,"column":7,"nodeType":"372","endLine":24,"endColumn":9,"suggestions":"389"},{"ruleId":"390","severity":1,"message":"391","line":19,"column":21,"nodeType":"383","endLine":19,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":20,"column":21,"nodeType":"383","endLine":20,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":21,"column":21,"nodeType":"383","endLine":21,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":22,"column":21,"nodeType":"383","endLine":22,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":9,"column":20,"nodeType":"387","messageId":"388","endLine":9,"endColumn":22},{"ruleId":"385","severity":1,"message":"386","line":98,"column":33,"nodeType":"387","messageId":"388","endLine":98,"endColumn":35},{"ruleId":"392","severity":1,"message":"393","line":23,"column":10,"nodeType":"394","messageId":"395","endLine":23,"endColumn":24},{"ruleId":"392","severity":1,"message":"396","line":50,"column":9,"nodeType":"394","messageId":"395","endLine":50,"endColumn":17},{"ruleId":"392","severity":1,"message":"397","line":5,"column":8,"nodeType":"394","messageId":"395","endLine":5,"endColumn":19},{"ruleId":"392","severity":1,"message":"398","line":29,"column":9,"nodeType":"394","messageId":"395","endLine":29,"endColumn":32},{"ruleId":"392","severity":1,"message":"399","line":36,"column":9,"nodeType":"394","messageId":"395","endLine":36,"endColumn":32},{"ruleId":"392","severity":1,"message":"400","line":6,"column":8,"nodeType":"394","messageId":"395","endLine":6,"endColumn":12},{"ruleId":"392","severity":1,"message":"401","line":14,"column":8,"nodeType":"394","messageId":"395","endLine":14,"endColumn":13},{"ruleId":"385","severity":1,"message":"386","line":65,"column":42,"nodeType":"387","messageId":"388","endLine":65,"endColumn":44},{"ruleId":"385","severity":1,"message":"402","line":54,"column":53,"nodeType":"387","messageId":"388","endLine":54,"endColumn":55},{"ruleId":"385","severity":1,"message":"386","line":92,"column":42,"nodeType":"387","messageId":"388","endLine":92,"endColumn":44},{"ruleId":"366","replacedBy":"403"},{"ruleId":"368","replacedBy":"404"},{"ruleId":"370","severity":1,"message":"377","line":30,"column":7,"nodeType":"372","endLine":30,"endColumn":19,"suggestions":"405"},{"ruleId":"370","severity":1,"message":"374","line":38,"column":8,"nodeType":"372","endLine":38,"endColumn":10,"suggestions":"406"},{"ruleId":"385","severity":1,"message":"386","line":92,"column":33,"nodeType":"387","messageId":"388","endLine":92,"endColumn":35},"no-native-reassign",["407"],"no-negated-in-lhs",["408"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["409"],"React Hook React.useEffect has a missing dependency: 'trackPageView'. Either include it or remove the dependency array.",["410"],["411"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["412"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["413"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["414"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["415"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'checkAuthState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'BubbleChart' is defined but never used.","'handleClickNotification' is assigned a value but never used.","'handleCloseNotification' is assigned a value but never used.","'Icon' is defined but never used.","'Table' is defined but never used.","Expected '!==' and instead saw '!='.",["407"],["408"],["416"],["417"],"no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"420","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"423","fix":"427"},{"desc":"425","fix":"428"},{"desc":"423","fix":"429"},{"desc":"420","fix":"430"},"Update the dependencies array to be: [dispatch]",{"range":"431","text":"432"},"Update the dependencies array to be: [trackPageView]",{"range":"433","text":"434"},{"range":"435","text":"434"},"Update the dependencies array to be: [isLoggedIn, props.history]",{"range":"436","text":"437"},"Update the dependencies array to be: [props.match.params.id]",{"range":"438","text":"439"},{"range":"440","text":"437"},{"range":"441","text":"439"},{"range":"442","text":"437"},{"range":"443","text":"434"},[1043,1045],"[dispatch]",[1237,1239],"[trackPageView]",[1020,1022],[1419,1431],"[isLoggedIn, props.history]",[1009,1011],"[props.match.params.id]",[954,966],[940,942],[956,968],[1244,1246]]